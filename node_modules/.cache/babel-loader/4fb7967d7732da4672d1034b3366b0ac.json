{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ronal\\\\todo-react\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport List from './List';\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [items, setItems] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"93fZ3QQLFj6uJF3ptiUqYXTNM7g=\");\n\n_c = Todo;\n;\n\nfunction TodoForm(props) {\n  function addItem(event) {\n    event.preventDefault();\n\n    if (text) {\n      setItems([...items, text]);\n      setText('');\n    }\n  }\n\n  function handleChange(event) {\n    let t = event.target.value;\n    setText(t);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      type: \"text\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TodoForm;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Ronal/todo-react/src/Todo.js"],"names":["React","useState","List","Todo","text","setText","items","setItems","TodoForm","props","addItem","event","preventDefault","handleChange","t","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEK;AAAb;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH;;GArBQH,I;;KAAAA,I;AAqBR;;AAGD,SAASK,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,WAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAEnBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGR,IAAH,EAAQ;AACJG,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,IAAX,CAAD,CAAR;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AAEJ;;AAGD,WAASQ,YAAT,CAAsBF,KAAtB,EAA4B;AAExB,QAAIG,CAAC,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAArB;AACAX,IAAAA,OAAO,CAACS,CAAD,CAAP;AAEH;;AAED,sBAEI;AAAA,4BAEI;AAAO,MAAA,QAAQ,EAAED,YAAjB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,KAAK,EAAET;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH;;MAhCQF,Q;AAmCT,eAAeL,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport List from './List'\r\nimport './Todo.css'\r\n\r\nfunction Todo(){\r\n\r\n    const [text, setText] = useState('');\r\n    const [items, setItems] = useState([]);\r\n\r\n   \r\n\r\n   \r\n    return(\r\n\r\n        <div className='container'>\r\n            <h1>Todo</h1>\r\n\r\n            <TodoForm></TodoForm>\r\n\r\n            <List items={items}></List>\r\n\r\n        </div>\r\n        \r\n\r\n    );\r\n};\r\n\r\n\r\nfunction TodoForm(props){\r\n\r\n    function addItem(event){\r\n\r\n        event.preventDefault();\r\n\r\n        if(text){\r\n            setItems([...items, text]);\r\n            setText('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    function handleChange(event){\r\n    \r\n        let t = event.target.value;\r\n        setText(t);\r\n\r\n    }\r\n\r\n    return(\r\n\r\n        <form>\r\n\r\n            <input onChange={handleChange} type=\"text\" value={text} ></input>\r\n            <button onClick={addItem} >Add</button>\r\n\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}